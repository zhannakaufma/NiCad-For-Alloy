comments
    //
    --
    /* */
end comments

% name
compounds
    => >= -> <: :> ++ || && <=>
end compoundscompounds

keys 
    abstract       after       all         always       and
    as             assert      before      but          check
    disj           else        enabled     event        eventually
    exactly        extends     fact        for          fun
    historically   iden        iff         implies      in
    Int            invariant   let         lone         modifies
    module         no          none        not          once   
    one            open        or          pred         releases
    run            set         sig         since        some
    steps          sum         triggered   univ         until
    var
    
end keys

define alloyModule
    [opt moduleDecl] [repeat import] [repeat paragraph]
end define

define moduleDecl
    module [qualName] [opt nameList]
end define

define nameList
    `[ [list name +] `]
end define

define `import
    open [qualName] [opt qualNameList] [opt imAsName]
end define

define qualNameList
    `[ [list qualName +]  `]
end define
